// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Earthquake.Migrations
{
    [DbContext(typeof(Program.EQDBContext))]
    partial class EQDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Program+eq2000", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2000");
                });

            modelBuilder.Entity("Program+eq2001", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2001");
                });

            modelBuilder.Entity("Program+eq2002", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2002");
                });

            modelBuilder.Entity("Program+eq2003", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2003");
                });

            modelBuilder.Entity("Program+eq2004", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2004");
                });

            modelBuilder.Entity("Program+eq2005", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2005");
                });

            modelBuilder.Entity("Program+eq2006", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2006");
                });

            modelBuilder.Entity("Program+eq2007", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2007");
                });

            modelBuilder.Entity("Program+eq2008", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2008");
                });

            modelBuilder.Entity("Program+eq2009", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2009");
                });

            modelBuilder.Entity("Program+eq2010", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2010");
                });

            modelBuilder.Entity("Program+eq2011", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2011");
                });

            modelBuilder.Entity("Program+eq2012", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2012");
                });

            modelBuilder.Entity("Program+eq2013", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2013");
                });

            modelBuilder.Entity("Program+eq2014", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2014");
                });

            modelBuilder.Entity("Program+eq2015", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2015");
                });

            modelBuilder.Entity("Program+eq2016", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2016");
                });

            modelBuilder.Entity("Program+eq2017", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2017");
                });

            modelBuilder.Entity("Program+eq2018", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2018");
                });

            modelBuilder.Entity("Program+eq2019", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2019");
                });

            modelBuilder.Entity("Program+eq2020", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2020");
                });

            modelBuilder.Entity("Program+eq2021", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2021");
                });

            modelBuilder.Entity("Program+eq2022", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2022");
                });

            modelBuilder.Entity("Program+eq2023", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Depth")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DepthError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Dmin")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gap")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HorizontalError")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("LocationSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Mag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MagError")
                        .HasColumnType("numeric");

                    b.Property<int?>("MagNst")
                        .HasColumnType("integer");

                    b.Property<string>("MagSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MagType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Net")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nst")
                        .HasColumnType("integer");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rms")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Updated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eq2023");
                });
#pragma warning restore 612, 618
        }
    }
}
